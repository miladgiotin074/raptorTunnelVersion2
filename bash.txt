#!/bin/bash
set -e

VXLAN_IF="vxlan88"
VXLAN_ID=88
VXLAN_NET="10.200.200.0/24"
VXLAN_IP_IRAN="10.200.200.1"
VXLAN_IP_REMOTE="10.200.200.2"
XRAY_CONFIG_PATH="/usr/local/etc/xray/config.json"

# Detect outgoing interface
OUT_DEV=$(ip route get 8.8.8.8 | awk '{print $5; exit}')

menu() {
  echo "========== VXLAN + Xray SOCKS5 Manager =========="
  echo "1) Reset all configurations"
  echo "2) Setup Iran server"
  echo "3) Setup Remote server"
  echo "==============================================="
  read -p "Select an option [1-3]: " opt
  case "$opt" in
    1) reset_all ;;
    2) setup_iran ;;
    3) setup_remote ;;
    *) echo "Invalid option" ;;
  esac
}

reset_all() {
  echo "[INFO] Stopping Xray..."
  systemctl stop xray || true

  echo "[INFO] Removing VXLAN interface..."
  ip link set "$VXLAN_IF" down 2>/dev/null || true
  ip link delete "$VXLAN_IF" type vxlan 2>/dev/null || true

  echo "[INFO] Flushing iptables rules..."
  iptables -F
  iptables -t nat -F

  echo "[INFO] Restoring IP forwarding..."
  sed -i '/net.ipv4.ip_forward/d' /etc/sysctl.conf
  sysctl -w net.ipv4.ip_forward=0

  echo "[INFO] Reset complete."
}

setup_iran() {
  read -p "Enter Iran public IP (IRAN_PUBLIC_IP): " IRAN_PUBLIC_IP
  read -p "Enter Remote public IP (REMOTE_PUBLIC_IP): " REMOTE_PUBLIC_IP
  read -p "Enter VXLAN UDP port (TUNNEL_PORT) [4789]: " TUNNEL_PORT
  TUNNEL_PORT=${TUNNEL_PORT:-4789}
  read -p "Enter local SOCKS5 listen port (XRAY_PORT) [1080]: " XRAY_PORT
  XRAY_PORT=${XRAY_PORT:-1080}

  echo "[INFO] Setting up VXLAN..."
  ip link add "$VXLAN_IF" type vxlan id $VXLAN_ID dev "$OUT_DEV" \
    remote "$REMOTE_PUBLIC_IP" local "$IRAN_PUBLIC_IP" dstport "$TUNNEL_PORT"
  ip addr add "$VXLAN_IP_IRAN/24" dev "$VXLAN_IF"
  ip link set "$VXLAN_IF" up

  echo "[INFO] Setting iptables..."
  iptables -A INPUT -p udp -s "$REMOTE_PUBLIC_IP" --dport "$TUNNEL_PORT" -j ACCEPT

  sysctl -w net.ipv4.ip_forward=1
  grep -q "net.ipv4.ip_forward=1" /etc/sysctl.conf || echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf

  echo "[INFO] Creating Xray config..."
  mkdir -p $(dirname "$XRAY_CONFIG_PATH")
  cat > "$XRAY_CONFIG_PATH" <<EOF
{
  "inbounds": [
    {
      "listen": "0.0.0.0",
      "port": $XRAY_PORT,
      "protocol": "socks",
      "settings": {
        "udp": true,
        "auth": "noauth"
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "socks",
      "settings": {
        "servers": [
          {
            "address": "$VXLAN_IP_REMOTE",
            "port": $XRAY_PORT
          }
        ]
      }
    }
  ]
}
EOF

  echo "[INFO] Restarting Xray..."
  systemctl restart xray
  systemctl status xray --no-pager || true
  echo "[DONE] Iran server setup complete."
}

setup_remote() {
  read -p "Enter Remote public IP (REMOTE_PUBLIC_IP): " REMOTE_PUBLIC_IP
  read -p "Enter Iran public IP (IRAN_PUBLIC_IP): " IRAN_PUBLIC_IP
  read -p "Enter VXLAN UDP port (TUNNEL_PORT) [4789]: " TUNNEL_PORT
  TUNNEL_PORT=${TUNNEL_PORT:-4789}
  read -p "Enter SOCKS5 listen port (XRAY_PORT) [1090]: " XRAY_PORT
  XRAY_PORT=${XRAY_PORT:-1090}

  echo "[INFO] Setting up VXLAN..."
  ip link add "$VXLAN_IF" type vxlan id $VXLAN_ID dev "$OUT_DEV" \
    remote "$IRAN_PUBLIC_IP" local "$REMOTE_PUBLIC_IP" dstport "$TUNNEL_PORT"
  ip addr add "$VXLAN_IP_REMOTE/24" dev "$VXLAN_IF"
  ip link set "$VXLAN_IF" up

  echo "[INFO] Setting iptables..."
  iptables -A INPUT -p udp -s "$IRAN_PUBLIC_IP" --dport "$TUNNEL_PORT" -j ACCEPT
  iptables -t nat -A POSTROUTING -s $VXLAN_NET -j MASQUERADE

  sysctl -w net.ipv4.ip_forward=1
  grep -q "net.ipv4.ip_forward=1" /etc/sysctl.conf || echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf

  echo "[INFO] Creating Xray config..."
  mkdir -p $(dirname "$XRAY_CONFIG_PATH")
  cat > "$XRAY_CONFIG_PATH" <<EOF
{
  "inbounds": [
    {
      "listen": "$VXLAN_IP_REMOTE",
      "port": $XRAY_PORT,
      "protocol": "socks",
      "settings": {
        "udp": true,
        "auth": "noauth"
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    }
  ]
}
EOF

  echo "[INFO] Restarting Xray..."
  systemctl restart xray
  systemctl status xray --no-pager || true
  echo "[DONE] Remote server setup complete."
}

menu
